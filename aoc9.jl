### A Pluto.jl notebook ###
# v0.19.16

using Markdown
using InteractiveUtils

# ╔═╡ 5ef8160a-7a79-11ed-37fe-afc5a602a0f0
md"# Advent of Code 2022 Day 9: Rope Bridge
Link to [Day 9](https://adventofcode.com/2022/day/9)"

# ╔═╡ c80f7cd7-85a3-4700-b658-5fdbd18683f9
input = """R 1
U 1
D 1
U 1
R 2
D 2
R 2
D 2
R 1
U 1
L 1
U 2
D 2
R 1
D 1
R 2
U 2
R 2
L 2
D 2
L 2
U 2
D 2
L 2
R 2
D 1
U 2
D 2
U 1
L 2
D 2
R 1
U 2
D 2
L 1
D 2
L 2
R 2
U 2
D 2
U 1
R 1
U 1
D 1
R 2
L 2
D 1
U 1
R 1
L 1
U 1
D 1
L 1
U 1
D 1
U 2
D 2
U 1
D 1
U 1
L 1
R 2
L 1
D 1
U 1
R 1
L 2
U 2
L 2
U 2
D 1
R 2
D 2
L 2
R 1
U 2
R 1
D 2
L 1
D 1
L 1
D 2
R 1
U 1
L 1
U 2
D 2
L 1
U 2
D 2
R 1
U 1
R 1
L 2
D 1
L 2
U 2
L 2
D 2
L 2
D 2
U 1
L 1
U 2
R 1
D 1
R 1
D 1
R 1
D 2
U 1
R 1
U 1
R 1
D 1
U 3
L 2
R 2
L 3
R 1
L 1
U 2
L 1
U 3
D 3
L 3
D 2
L 3
U 1
L 1
R 2
D 3
L 1
R 1
U 2
L 2
D 3
U 2
D 3
R 3
U 1
D 3
L 3
R 2
U 3
D 1
U 1
R 1
L 2
R 1
L 2
D 3
L 1
D 3
R 2
U 1
D 1
R 3
D 1
L 1
U 2
D 1
L 3
U 3
R 1
D 1
U 3
D 2
L 3
R 2
L 1
D 2
U 1
R 2
L 1
U 2
R 2
L 2
U 2
L 2
U 2
R 1
U 2
D 3
U 1
D 1
L 2
U 1
L 2
R 3
L 2
R 3
L 1
R 2
L 2
R 1
D 3
L 3
D 2
R 1
D 1
U 1
D 2
R 3
U 3
D 3
R 3
L 1
U 1
R 3
U 2
L 1
R 1
L 3
D 3
R 2
U 1
L 2
D 2
R 1
U 3
D 2
R 1
L 4
D 3
R 3
L 1
D 1
R 3
U 3
L 2
D 4
U 3
D 2
L 4
D 2
R 1
D 3
R 3
D 1
U 4
R 1
U 4
D 2
U 4
L 1
R 1
L 2
R 1
D 1
L 4
U 1
R 4
D 3
R 1
U 3
R 3
U 2
L 3
U 2
L 2
R 4
U 2
D 3
R 4
D 1
U 4
D 3
R 2
D 3
R 1
D 1
U 1
R 3
L 1
U 3
L 1
D 3
L 3
D 3
R 3
D 3
U 1
R 4
D 2
R 2
U 1
R 1
D 1
L 4
D 2
L 1
U 4
D 1
L 2
U 4
D 3
U 3
L 2
R 2
D 1
L 4
D 2
R 3
D 4
R 4
U 1
D 1
L 2
R 1
D 4
R 2
L 1
D 4
L 3
R 3
U 4
R 3
D 3
L 2
R 1
D 3
L 2
R 3
D 1
L 2
U 3
R 4
D 4
U 3
R 2
D 3
R 3
D 1
R 4
U 3
R 5
U 1
D 2
R 5
U 1
R 3
L 1
U 1
L 1
D 1
R 5
U 2
D 3
R 4
L 5
R 2
D 1
L 2
U 2
D 3
R 5
D 2
R 5
D 5
U 5
D 1
L 5
U 3
D 2
R 1
D 5
R 2
D 2
R 5
U 3
L 2
U 1
L 4
R 5
L 3
R 2
U 2
D 3
L 1
U 3
L 4
R 5
L 1
U 4
L 1
D 5
R 3
U 5
R 3
L 2
U 4
D 2
U 4
L 1
U 1
L 1
R 4
D 4
U 4
R 5
D 2
U 2
L 3
U 4
D 3
L 2
R 4
U 1
L 3
R 3
D 1
L 2
R 5
U 2
L 2
R 2
L 4
D 4
L 2
U 4
R 2
L 3
U 4
L 5
D 5
L 5
U 3
L 5
R 2
D 4
L 5
U 3
D 2
L 2
D 2
U 2
D 4
R 5
U 5
L 3
R 5
D 3
L 1
D 1
L 1
D 5
R 2
L 1
U 2
L 3
U 2
R 2
L 5
R 3
U 2
R 1
L 4
D 4
U 3
R 2
L 2
D 3
L 2
R 4
L 1
U 6
R 2
D 5
L 4
U 3
R 6
D 6
L 4
D 3
R 2
D 2
L 2
R 2
D 4
L 6
D 3
L 5
R 4
L 5
U 3
L 6
U 5
L 3
R 2
U 3
L 1
D 1
L 3
U 4
L 5
D 3
L 2
U 5
D 4
L 3
R 1
U 3
D 4
U 3
D 3
U 6
D 4
R 3
U 6
R 1
U 3
R 3
U 3
R 5
U 6
L 1
R 2
D 5
U 3
D 4
U 4
D 4
L 1
U 4
D 3
L 1
U 5
R 3
U 3
R 1
U 1
L 3
R 3
U 4
R 1
L 3
U 2
L 2
D 2
L 4
U 4
L 3
U 4
R 2
U 1
D 2
U 2
D 5
L 5
R 1
D 3
L 4
R 3
D 6
U 7
D 5
L 7
D 5
U 3
D 1
L 2
R 2
D 7
U 7
D 3
L 2
U 1
L 6
D 5
R 4
U 3
R 5
U 6
L 6
U 6
L 1
R 5
U 7
R 5
U 5
R 4
U 5
D 6
R 4
D 7
L 7
U 5
R 2
U 7
R 3
D 5
R 5
D 4
U 1
L 6
R 4
D 6
L 6
R 2
U 7
L 3
D 5
L 4
R 3
L 1
U 3
D 3
R 5
U 1
L 6
U 7
R 7
D 4
L 4
U 6
R 7
U 4
R 1
L 1
R 4
U 7
D 1
U 5
D 3
R 7
L 1
D 4
U 6
D 2
L 3
U 1
D 6
L 1
D 5
R 3
U 3
L 6
D 5
R 4
U 5
L 4
R 4
U 7
R 1
L 7
U 2
R 4
L 1
D 5
U 4
L 6
D 2
R 3
L 2
D 5
R 5
U 7
R 4
D 7
U 6
R 6
L 6
R 6
U 1
D 1
R 3
D 2
U 3
R 3
D 8
U 1
R 5
L 8
D 8
L 7
D 3
U 6
R 6
U 8
D 3
U 2
R 2
D 7
U 8
D 5
L 2
R 8
U 3
L 2
R 5
U 3
R 6
L 8
U 8
R 8
L 2
U 1
D 1
U 4
L 1
U 2
L 4
D 2
U 4
D 3
L 8
D 3
R 3
L 2
D 7
L 5
R 5
L 3
R 4
L 7
D 6
U 3
L 3
D 4
R 4
L 3
D 5
U 2
R 4
U 6
L 7
D 2
R 6
L 3
D 8
L 8
R 2
U 7
D 7
U 3
R 7
U 8
L 5
D 6
R 6
U 8
R 1
U 3
R 5
L 4
D 7
U 6
R 8
L 2
R 6
U 1
L 4
D 1
L 2
U 4
R 2
U 4
R 5
L 3
R 1
L 4
R 7
D 7
R 1
U 5
L 6
D 4
R 4
D 5
U 8
L 3
D 8
L 6
U 5
D 1
R 7
L 2
D 1
R 7
L 5
D 8
U 6
D 1
L 8
U 8
L 1
R 1
U 2
D 9
L 5
D 9
L 4
U 8
D 3
R 6
L 1
R 8
D 7
L 6
U 7
R 6
U 2
L 3
D 6
L 5
U 3
R 1
U 6
D 1
U 2
L 9
R 2
L 2
R 9
D 1
R 2
U 7
D 7
U 5
R 4
U 9
L 5
U 9
D 5
L 1
R 3
L 1
U 1
D 7
L 8
D 2
L 7
D 1
L 6
R 2
D 1
U 9
D 4
U 8
L 8
U 1
L 8
D 6
U 1
R 2
U 3
R 4
D 4
U 4
L 9
D 5
L 2
U 6
D 8
U 6
R 1
L 6
D 5
R 3
L 4
R 6
L 5
R 4
L 6
D 5
R 8
D 6
L 1
U 8
R 8
U 8
R 3
U 2
D 9
L 9
U 3
D 5
L 2
D 2
R 3
L 2
D 8
R 6
D 9
R 5
L 9
R 2
L 9
U 5
R 9
D 3
R 1
U 1
L 6
R 7
D 7
U 3
R 2
L 5
D 2
L 8
U 8
R 9
U 5
R 1
U 9
D 8
R 10
U 9
D 5
R 4
D 8
U 4
L 7
U 10
L 8
R 10
L 9
D 9
L 4
R 7
U 4
D 3
U 10
R 6
D 9
L 5
R 3
D 7
R 9
D 4
L 9
D 3
R 7
U 6
L 6
R 6
L 7
D 8
L 7
U 5
D 8
L 8
U 9
L 5
D 9
U 9
R 3
D 1
U 9
L 9
U 6
R 4
U 6
D 10
U 4
R 9
D 9
R 2
D 10
L 9
U 8
L 2
D 7
L 10
R 2
L 9
R 9
L 10
U 6
D 7
R 1
D 9
R 5
L 7
D 4
U 7
L 3
D 3
R 4
L 8
U 1
L 1
D 10
U 2
D 9
L 2
D 8
U 2
D 3
R 6
U 3
R 5
U 4
L 6
R 10
L 1
D 2
L 3
U 11
R 5
U 11
D 11
U 10
D 2
L 10
U 8
R 4
D 11
U 11
R 11
U 5
D 3
R 7
D 9
U 9
R 5
U 8
D 7
U 9
D 2
U 11
L 7
D 1
R 9
D 2
R 5
U 4
R 11
D 1
L 2
R 1
U 5
D 4
L 10
R 11
U 6
L 3
U 11
R 1
D 1
L 2
U 5
R 6
U 9
R 11
D 9
L 11
U 6
R 5
L 7
D 6
U 9
D 5
U 6
R 10
D 11
R 4
U 7
L 5
U 7
L 2
R 6
L 10
D 3
R 6
L 9
D 8
L 1
R 1
L 1
R 3
D 8
L 10
D 2
U 1
D 1
L 3
R 10
L 3
U 1
D 2
U 2
D 3
U 1
R 8
U 8
D 10
U 6
L 5
U 6
D 4
R 9
D 9
R 9
D 11
L 3
D 7
R 9
L 7
U 7
D 7
R 4
L 3
R 5
U 3
L 9
D 10
L 1
R 9
L 6
D 5
L 6
D 4
U 7
L 8
R 7
L 5
U 9
R 1
L 1
D 12
R 5
U 1
L 8
D 11
U 5
D 5
R 4
D 10
R 2
U 6
D 2
L 12
D 1
R 10
U 4
D 8
L 7
D 9
R 7
D 1
R 10
D 5
U 7
D 12
R 9
U 2
D 3
U 5
D 2
U 6
D 3
U 7
D 4
R 11
D 2
L 3
R 9
L 2
R 12
L 3
D 5
U 7
D 6
R 9
D 12
R 11
D 5
U 5
D 2
R 1
U 6
R 6
D 5
L 9
U 10
D 4
U 1
R 3
D 10
U 1
R 9
D 8
L 1
D 12
U 11
D 12
L 2
R 9
U 12
D 6
L 1
R 4
L 8
D 8
L 6
R 10
L 8
D 4
U 11
L 1
R 5
L 6
R 10
D 12
R 3
L 9
D 10
U 6
D 9
R 7
U 9
R 10
U 10
L 10
U 1
L 3
D 7
L 12
U 4
R 3
U 1
L 8
R 5
U 4
L 4
D 5
R 4
D 11
L 9
D 5
L 7
U 6
R 8
U 7
D 3
U 1
L 6
U 8
D 2
R 7
D 2
U 1
L 9
U 8
L 10
U 4
D 12
L 12
D 5
R 3
U 1
D 1
R 11
L 10
R 11
L 6
R 3
L 13
R 6
L 4
R 10
D 9
R 13
U 8
L 7
R 7
L 10
R 9
U 4
L 1
D 1
L 12
D 6
L 3
R 4
U 6
L 12
D 2
U 5
R 11
L 2
U 8
R 10
D 2
U 6
L 4
D 2
U 9
L 7
D 5
L 6
U 9
R 6
L 9
R 1
U 3
L 6
R 6
U 8
D 1
R 5
U 12
D 9
U 10
D 13
L 10
R 4
L 13
R 9
L 9
D 6
U 8
D 6
U 8
D 10
R 3
L 11
R 8
D 4
R 2
U 10
D 9
U 8
R 5
D 10
L 11
R 7
D 9
U 7
L 6
U 3
L 5
U 6
D 1
U 3
R 8
L 5
U 3
R 13
L 8
D 1
U 8
L 6
D 11
U 4
D 1
R 9
D 11
R 1
D 2
R 10
U 2
D 12
U 6
R 13
U 6
D 4
R 11
U 6
R 9
U 10
D 3
R 2
L 13
U 14
D 14
R 6
D 9
U 5
D 2
L 5
R 10
L 3
R 8
D 9
U 10
R 11
U 8
L 8
R 12
D 13
U 7
R 14
D 9
L 12
R 13
L 10
D 11
L 7
U 6
D 14
L 14
D 13
U 11
R 11
U 9
L 8
D 2
L 9
R 12
U 5
D 9
U 10
R 1
L 2
D 8
L 8
R 4
U 2
L 13
R 9
L 12
D 7
L 14
D 13
R 12
D 10
L 5
U 12
R 6
L 3
U 14
R 8
U 10
R 5
U 3
D 1
R 6
U 9
R 4
L 9
U 7
R 6
U 8
R 10
U 9
R 9
U 12
L 14
R 2
U 11
L 12
D 5
R 15
L 10
U 8
R 6
U 8
R 6
D 2
U 9
L 15
D 13
L 14
U 1
D 9
U 6
R 8
L 6
D 3
L 13
R 7
U 1
L 8
U 7
D 8
R 1
D 6
L 8
R 14
D 14
U 9
L 14
R 15
U 11
L 14
D 14
L 1
U 5
L 3
R 4
L 13
R 5
D 14
R 4
U 7
D 9
R 4
U 6
D 11
R 12
D 13
U 15
D 10
R 1
D 1
U 10
L 14
R 13
U 6
D 10
U 15
D 3
U 8
D 2
U 15
R 6
U 12
L 9
R 2
D 6
R 15
D 13
R 2
D 5
R 8
U 3
R 10
D 6
L 7
D 6
R 11
U 13
D 1
L 7
U 7
L 4
U 10
D 4
R 10
U 2
L 2
U 4
R 7
D 15
R 15
D 7
R 14
U 3
D 8
L 2
U 11
D 11
U 9
R 5
L 3
D 9
R 12
L 2
R 10
D 6
R 6
U 15
R 10
D 16
R 5
U 14
R 16
U 5
L 10
R 14
L 15
R 13
L 15
R 12
L 9
D 16
U 13
D 16
R 2
U 1
D 15
L 7
D 5
R 9
U 8
R 12
U 3
D 16
R 11
D 1
U 3
D 4
U 10
L 8
R 4
L 8
R 8
U 8
L 9
D 16
U 7
D 6
R 1
D 3
L 15
U 9
D 9
U 1
L 9
D 7
U 14
R 1
D 11
L 16
U 13
L 3
R 12
L 9
R 9
L 9
U 5
R 10
D 14
L 8
R 7
L 12
R 13
D 5
U 10
R 12
U 11
L 7
R 9
D 7
L 11
D 1
R 8
D 7
U 6
D 10
R 13
L 16
U 10
L 5
R 12
L 16
U 6
D 10
U 3
D 7
U 7
D 15
L 2
R 9
U 8
D 11
L 15
U 10
D 10
L 6
D 14
L 5
U 3
D 9
U 2
D 16
U 6
D 3
R 15
D 12
R 9
L 16
R 4
U 9
L 8
R 11
L 14
D 6
U 11
L 6
R 7
U 8
R 7
U 8
D 7
U 6
L 15
U 3
D 6
U 3
R 6
D 3
L 10
R 14
L 17
D 12
L 15
D 5
R 6
D 4
R 6
D 5
U 8
D 10
R 13
D 6
U 3
L 5
U 3
R 11
D 11
U 8
L 5
U 11
L 7
R 16
L 11
D 3
L 16
D 14
R 1
U 10
L 7
U 4
D 11
L 9
R 3
D 1
L 7
R 17
D 17
R 11
U 4
R 15
L 10
R 13
U 17
D 16
L 16
U 14
D 11
U 10
D 12
L 11
R 5
D 17
U 1
R 5
L 14
D 14
R 5
L 6
R 11
U 13
R 10
U 15
L 2
R 8
D 3
R 11
L 8
R 11
U 5
L 12
U 2
L 16
D 5
L 17
R 10
D 15
L 16
U 1
D 10
R 13
L 6
D 5
R 13
U 2
D 16
L 9
U 11
D 13
U 16
L 6
R 15
D 10
U 17
L 15
D 7
R 6
D 15
R 11
L 14
U 12
D 18
R 6
U 16
L 1
U 10
R 15
U 3
L 12
D 9
L 11
D 18
R 11
L 12
U 5
L 13
D 2
R 11
D 10
L 15
R 5
D 17
R 6
L 16
R 11
D 1
R 5
U 13
R 11
D 13
L 12
U 10
D 9
R 1
D 15
R 1
D 17
R 10
U 11
R 14
L 17
R 2
L 1
D 12
R 6
U 18
R 3
L 8
R 11
L 15
U 8
L 7
D 2
L 9
D 9
L 11
U 5
D 8
U 16
R 13
L 7
D 6
U 16
L 9
U 3
R 4
L 12
U 18
D 7
L 10
R 16
D 1
R 4
U 4
R 13
D 6
L 5
R 3
D 10
U 4
L 17
D 9
R 8
L 1
D 8
L 16
D 3
U 3
R 1
U 9
R 13
D 3
L 4
R 6
D 10
U 16
L 9
U 5
L 14
U 8
D 17
L 18
D 5
U 10
R 14
L 8
U 6
R 5
U 19
L 9
U 2
D 7
U 14
R 17
L 16
D 15
U 11
D 4
L 16
U 14
D 6
L 3
R 18
L 17
D 6
L 10
U 7
D 11
L 15
U 12
L 6
D 6
L 14
U 17
L 7
D 2
L 7
U 12
L 17
R 16
U 19
L 12
U 10
L 6
U 3
D 16
L 5
D 15
L 7
R 6
D 2
R 19
L 4
D 18
R 19
D 9
R 11
L 17
R 1
U 15
R 3
D 18
L 13
U 7
D 7
R 15
U 4
D 16
R 6
U 4
R 10
U 10
R 1
D 19
R 13
U 7
L 13
D 15
U 2
L 18
D 5
U 5
D 10
L 8
D 13
U 8
L 15
D 12
U 11
D 17
L 14
R 4
D 19
L 6
D 5
L 13
D 16
U 1
R 14
U 15
L 18
D 7
L 14
D 11
L 7
D 18
U 16
L 1
R 18
L 1
U 19
R 3
D 1"""

# ╔═╡ 6f5694d7-9850-49ae-b542-a02cf61e63a7
motions = String.(split(input, "\n"))

# ╔═╡ df695efe-2dd9-44e0-a81b-c1840f6fdeaa
md"## Part 1
Simulate your complete hypothetical series of motions. **How many positions does the tail of the rope visit at least once?**"

# ╔═╡ 02a099c1-bbce-44ed-beae-ff98ad3895ee
function calculate_new_H_pos(H_pos, motion_direction)
	# motion_direction, motion_steps = String.(split(motion))
	# motion_steps = parse(Int, motion_steps)

	if motion_direction == "L"
		return (H_pos[1], H_pos[2] - 1)
	elseif motion_direction == "R"
		return (H_pos[1], H_pos[2] + 1)
	elseif motion_direction == "U"
		return (H_pos[1] - 1, H_pos[2])
	elseif motion_direction == "D"
		return (H_pos[1] + 1, H_pos[2])
	end
end

# ╔═╡ f4631b56-71b7-4447-9229-6c84428005f4
function calculate_new_T_pos(H_pos, T_pos)
	pos_diff = H_pos .- T_pos
	if all([ abs(x) < 2 for x in pos_diff ])
		# if it hasn't moved enough (neither row or col is 2 away), 
		# then keep T where it is
		return T_pos
	end

	# Restrict the change in position to one square away from current T_pos
	return T_pos .+ clamp.(pos_diff, (-1, -1), (1, 1))
end

# ╔═╡ 3c74df91-5fe9-463f-baec-3fa48718e3ea
clamp.((1, -2), (-1, -1), (1, 1))

# ╔═╡ d04963e6-0067-4e45-adbd-9768cc9d4e9f
calculate_new_T_pos((0,0), (0,2))

# ╔═╡ 723721f2-c96a-40db-a0fc-a5afe5448a51
function simulate_rope(motions)
	H_pos = (0, 0) # (row, col)
	T_pos = (0, 0)
	T_history = Set{Tuple{Int64, Int64}}()

	for motion in motions
		motion_direction, motion_steps = String.(split(motion))
		motion_steps = parse(Int, motion_steps)	
		for _ in 1:motion_steps
			H_pos = calculate_new_H_pos(H_pos, motion_direction)
			T_pos = calculate_new_T_pos(H_pos, T_pos)
			push!(T_history, T_pos)
		end
	end

	return T_history
end

# ╔═╡ 4289685e-f97d-45e0-9bd8-b297fd4c3acb
test = motions[1:5]

# ╔═╡ f63d5add-0c7f-4cd4-9947-0ff488e40543
simulate_rope(test)

# ╔═╡ 307106a4-e3f1-45fd-a284-4413748eacb8
length(simulate_rope(motions))

# ╔═╡ f0fd1b18-5f48-4629-bb4f-5200ebc658a3
md"## Part 2
Do the same thing, but instead of 2 knots (H and T), there are 10 knots (H, 1, 2, ..., 9). The head H knot still follows the series of motions. Each knot in the chain responds to the one ahead of it. Knot 9 is now the tail knot.

Simulate your complete series of motions on a larger rope with ten knots. **How many positions does the tail of the rope visit at least once?**"

# ╔═╡ 2583cadf-05f7-45de-8802-bff8d511d57b
function simulate_10_knot_rope(motions)
	H_pos = (0, 0) # (row, col)
	knot_pos = fill((0, 0), 9)
	T_history = Set{Tuple{Int64, Int64}}()

	for motion in motions
		motion_direction, motion_steps = String.(split(motion))
		motion_steps = parse(Int, motion_steps)	
		for _ in 1:motion_steps
			H_pos = calculate_new_H_pos(H_pos, motion_direction)
			for i in 1:9
				prev_knot = i == 1 ? H_pos : knot_pos[i-1]
				knot_pos[i] = calculate_new_T_pos(prev_knot, knot_pos[i])
			end
			push!(T_history, knot_pos[9])
		end
	end

	return T_history
end

# ╔═╡ 2e0230dd-ffa5-40d2-9d4c-8e189752417d
length(simulate_10_knot_rope(motions))

# ╔═╡ 00000000-0000-0000-0000-000000000001
PLUTO_PROJECT_TOML_CONTENTS = """
[deps]
"""

# ╔═╡ 00000000-0000-0000-0000-000000000002
PLUTO_MANIFEST_TOML_CONTENTS = """
# This file is machine-generated - editing it directly is not advised

julia_version = "1.8.3"
manifest_format = "2.0"
project_hash = "da39a3ee5e6b4b0d3255bfef95601890afd80709"

[deps]
"""

# ╔═╡ Cell order:
# ╟─5ef8160a-7a79-11ed-37fe-afc5a602a0f0
# ╟─c80f7cd7-85a3-4700-b658-5fdbd18683f9
# ╠═6f5694d7-9850-49ae-b542-a02cf61e63a7
# ╟─df695efe-2dd9-44e0-a81b-c1840f6fdeaa
# ╠═02a099c1-bbce-44ed-beae-ff98ad3895ee
# ╠═f4631b56-71b7-4447-9229-6c84428005f4
# ╠═3c74df91-5fe9-463f-baec-3fa48718e3ea
# ╠═d04963e6-0067-4e45-adbd-9768cc9d4e9f
# ╠═723721f2-c96a-40db-a0fc-a5afe5448a51
# ╠═4289685e-f97d-45e0-9bd8-b297fd4c3acb
# ╠═f63d5add-0c7f-4cd4-9947-0ff488e40543
# ╠═307106a4-e3f1-45fd-a284-4413748eacb8
# ╟─f0fd1b18-5f48-4629-bb4f-5200ebc658a3
# ╠═2583cadf-05f7-45de-8802-bff8d511d57b
# ╠═2e0230dd-ffa5-40d2-9d4c-8e189752417d
# ╟─00000000-0000-0000-0000-000000000001
# ╟─00000000-0000-0000-0000-000000000002
